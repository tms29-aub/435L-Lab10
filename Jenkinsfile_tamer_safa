pipeline { 
    agent any
    environment { 
        VIRTUAL_ENV = "${env.WORKSPACE}/venv"
        PYTHON = '/Users/tamersafa/.local/share/virtualenvs/storefront-KWPrtJCG/bin/python3'
    }

    options {
        timeout(time: 3, unit: 'MINUTES') // Set a global timeout for the entire pipeline
    }

    stages {
        stage('Setup') {
            options {
                timeout(time: 2, unit: 'MINUTES') 
            }
            steps {
                script {
                    if (!fileExists("${VIRTUAL_ENV}")) {
                        sh "${PYTHON} -m venv ${VIRTUAL_ENV}"
                    }
                }
                sh "${VIRTUAL_ENV}/bin/pip install -r requirements.txt"
            }
        }
        
        stage('Lint') { 
            steps {
                sh "${VIRTUAL_ENV}/bin/flake8 app.py"
            }
        }

        stage('Test') { 
            steps {
                sh "${VIRTUAL_ENV}/bin/pytest"
            }
        }

        stage('Coverage') {
            steps {
                sh "${VIRTUAL_ENV}/bin/coverage run -m pytest"
                sh "${VIRTUAL_ENV}/bin/coverage report -m"
                sh "${VIRTUAL_ENV}/bin/coverage html" // Generates HTML report
                archiveArtifacts artifacts: 'htmlcov/**', allowEmptyArchive: true
            }
        }

        stage('SecurityScan') {
            steps {
                sh "${VIRTUAL_ENV}/bin/bandit -r ."
            }
        }

        stage('Deploy') { 
            steps {
                script {
                    echo "Deploying application..."
                    // Placeholder for deployment steps - replace with actual deployment commands
                    // e.g., ssh, rsync, or scp commands to deploy to a remote server
                    sh "echo 'Deploying to server...'" 
                }
            }
        }
    }

    post { 
        always { 
            cleanWs()
        }
    }
}
