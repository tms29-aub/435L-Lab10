pipeline {
    agent any
    environment {
        VIRTUAL_ENV = 'venv' 
    }

    stages {
        stage('Setup') {
            steps {
                script {
                    if (!fileExists("${env.WORKSPACE}/${VIRTUAL_ENV}")) { 
                        sh "python3 -m venv ${VIRTUAL_ENV}" 
                    }
                    sh "source ${VIRTUAL_ENV}/bin/activate && pip install -r requirements.txt"
                    sh "source ${VIRTUAL_ENV}/bin/activate && pip install coverage bandit" // Install coverage and bandit tools
                }
            }
        }
        stage('Lint') {
            steps {
                sh "source ${VIRTUAL_ENV}/bin/activate && flake8 app.py"
            }
        }
        stage('Test') {
            steps {
                sh "source ${VIRTUAL_ENV}/bin/activate && pytest"
            }
        }
        stage('Coverage') {
            steps {
                script {
                    sh "source ${VIRTUAL_ENV}/bin/activate && coverage run -m pytest"
                    sh "source ${VIRTUAL_ENV}/bin/activate && coverage report" 
                    sh "source ${VIRTUAL_ENV}/bin/activate && coverage html"
                }
            }
        }
        stage('SecurityScan') {
            steps {
                sh "source ${VIRTUAL_ENV}/bin/activate && bandit -r . --exclude ${VIRTUAL_ENV} --quiet"
            }
        }
        stage('Deploy') {
            steps {
                echo "Deploying application..."
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
